syntax = "proto3";

package spot.v1;
option go_package = "github.com/iakrevetkho/archaeopteryx_example;user";

// Spot service is controlling game spots
service SpotService {
  rpc CreateSpot (CreateSpotRequest) returns (CreateSpotResponse) {}

  rpc GetSpot (GetSpotRequest) returns (GetSpotResponse) {}
  
  rpc SendPlayerPosition (stream SendPlayerPositionRequest) returns (SendPlayerPositionResponse) {}
  
  rpc GetPlayersPositions (GetPlayersPositionsRequest) returns (stream GetPlayersPositionsResponse) {}
}

// RPC structures

message CreateSpotRequest {
  Position position = 1;
  int32 radius = 2;
  int32 scan_period_in_seconds = 3;
  int32 zone_period_in_seconds = 4;
}

message CreateSpotResponse {
  string spot_uuid = 1;
}

message GetSpotRequest {
  string spot_uuid = 1;
}

message GetSpotResponse {
  Position position = 1;
  int32 radius = 3;
  int32 scan_period_in_seconds = 4;
  int32 zone_period_in_seconds = 5;
}

message SendPlayerPositionRequest {
  string spot_uuid = 1;
  string player_uuid = 2;
  Position position = 3;
}

message SendPlayerPositionResponse {}

message GetPlayersPositionsRequest {
  string spot_uuid = 1;
  string player_uuid = 2;
}

message GetPlayersPositionsResponse {
  Position player_position = 1;
  repeated PlayerPosition other_players_positions = 2;
}

// Non RPC structures

message Position {
  double longitude = 1;
  double latitude = 2;
}

message PlayerPosition {
  string player_uuid = 1;
  Position position = 2;
}